Notes

Day 1
    I have forgotten entirely how Python works
    Part 2
        Find out how often number from A appears in B, multiple A by that number, add together
        is left list unique-no, doesn't matter
Day 2
    Parse each line, check diff between each number, if greater than 3, unsafe, otherwise safe

    Allowed remove one

    Increase 

    2,4,6,8

    2,2,4,6,8

        
    6,4,8,10,12
    3, 12, 10, 8
    3, 12, 5, 7
    14, 12, 9, 10, 

    how know remove self or next or previous?
    know min/max diff two steps is 2-6 - irrelevant
    18, 


    brute force?
        ugh, omfg
        if find bad
            then just iterate every variant of line with one removed
            if one bad found, bad, if one safe found, good
            fuckin lol, that'd 
Day 3
    Looking for 
        mul(1-3digits,1-3digits)
        Need to actually do calculation, then add results
    Parse string
        regex? what it's made for, but I suspcet part 2 is designed to screw over people who use regex for this

        mul\([0-9]{1,3},[0-9]{1,3}\)
Day 4
    Todo: Stop bruteforcing once I've caught up to current day
    Find count of XMAS
        can be vertical, horizontal, diagonal, forwards, backwards (overlapping other words??)
    Brute Force:
        Array of arrays

        Search each row till find X, then search all possible directions for M, if found search A, search s
        I could be SUPER fucking lazy here, and pad the edgef the array with Z, so I don't have to care about oob
        or just make sure numbers never negative, tbh.